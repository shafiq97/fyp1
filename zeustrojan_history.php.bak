<?p    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Zeus Trojan Details</title>
        <link rel="stylesheet" href="css/zeustrojan_history.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    </head>ude 'header.php'; ?>
    <?php include 'sidebar.php'; ?>

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Zeus Trojan Details</title>
        <link rel="stylesheet" href="css/zeustrojan_history.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    </head>

    <section class="history-details">

        <h1 class="heading">Zeus Trojan (2007)</h1>

        <div class="detail-content">

            <div class="detail-section">
                <h2>Infect</h2>
                <p>
                    The Zeus trojan, also known as Zbot, typically infected systems through drive-by downloads from compromised websites or via phishing emails containing malicious attachments.
                    Users were often tricked into installing the malware by clicking on seemingly legitimate links or opening infected files.
                </p>
            </div>

            <div class="detail-section">
                <h2>Propagation</h2>
                <p>
                    Zeus itself did not actively spread like a worm. Instead, its propagation relied on the spread of infected files or the user's interaction with malicious websites.
                    Once installed, it could download configuration files and additional modules to enhance its capabilities.
                </p>
            </div>

            <div class="detail-section">
                <h2>Damage (Impact)</h2>
                <p>
                    Zeus's primary impact was the theft of sensitive information, particularly online banking credentials. It employed techniques like keylogging to record keystrokes and form grabbing to capture data entered into web forms.
                    This enabled attackers to commit financial fraud, resulting in significant monetary losses for individuals and organizations. Zeus was also used to create botnets for DDoS attacks.
                </p>
            </div>

            <div class="detail-section">
                <h2>Recovery</h2>
                <p>
                    Recovery from Zeus infections involved removing the malware from infected systems using anti-malware software. Banks and financial institutions implemented stronger security measures,
                    such as multi-factor authentication and improved fraud detection systems, to combat the threat. Law enforcement agencies worked to disrupt Zeus botnets and prosecute the perpetrators.
                </p>
            </div>

            <div class="detail-section">
                <h2>Lessons Learned</h2>
                <p>
                    The Zeus trojan highlighted the sophistication of financial malware and the importance of layered security. It underscored the need for strong passwords,
                    anti-malware protection, and user vigilance against phishing attacks and malicious websites. The incident also demonstrated the global nature of cybercrime and the challenges in combating it.
                </p>
            </div>

        </div>        <div class="timeline-section">
            <h2 class="section-title">Timeline of the Attack</h2>
            
            <div class="timeline-container">
                <?php
                // Include database connection and timeline functions
                require_once 'includes/timeline_functions.php';
                
                // Get timeline events for Zeus Trojan
                $events = getTimelineEvents('zeustrojan');
                ?>
                <!-- Timeline Line with Points -->
                <div class="timeline-line">
                    <?php
                    // Add hard-coded timeline points if database retrieval fails
                    if (empty($events)) {
                        $hardcodedEvents = [
                            ['title' => 'First Appearance', 'icon_class' => 'fa-biohazard'],
                            ['title' => 'Feature Evolution', 'icon_class' => 'fa-code-branch'],
                            ['title' => 'Global Impact', 'icon_class' => 'fa-globe'],
                            ['title' => 'Law Enforcement Action', 'icon_class' => 'fa-balance-scale'],
                            ['title' => 'Source Code Leak', 'icon_class' => 'fa-unlock']
                        ];
                        foreach ($hardcodedEvents as $index => $event):
                    ?>
                    <div class="timeline-point" data-index="<?php echo $index; ?>" aria-label="<?php echo htmlspecialchars($event['title']); ?>">
                        <i class="fas <?php echo htmlspecialchars($event['icon_class']); ?>"></i>
                    </div>
                    <?php 
                        endforeach;
                    } else {
                        foreach ($events as $index => $event): 
                    ?>
                    <div class="timeline-point" data-index="<?php echo $index; ?>" aria-label="<?php echo htmlspecialchars($event['title']); ?>">
                        <i class="fas <?php echo htmlspecialchars($event['icon_class']); ?>"></i>
                    </div>
                    <?php 
                        endforeach;
                    }
                    ?>
                </div>
                
                <!-- Timeline Event Cards -->
                <?php
                // Add hard-coded event cards if database retrieval fails
                if (empty($events)) {
                    $hardcodedEventDetails = [
                        ['year' => '2007', 'title' => 'First Appearance - July 2007', 
                         'description' => 'Zeus trojan first appears in the wild, targeting Windows systems. It is initially used to steal banking information by capturing form data and using keylogging techniques to record user credentials.'],
                        ['year' => '2009', 'title' => 'Feature Evolution - 2009', 
                         'description' => 'Zeus evolves to include advanced features like bypassing two-factor authentication and transaction tampering. The malware begins utilizing web injects to seamlessly modify banking websites in real-time, making its attacks extremely difficult to detect.'],
                        ['year' => '2010', 'title' => 'Global Impact - Mid-2010', 
                         'description' => 'Zeus becomes one of the most pervasive financial malware families, with over 3.6 million infected computers in the US alone. Estimated financial losses exceed $70 million globally as Zeus botnets grow in size and sophistication.'],
                        ['year' => '2010', 'title' => 'Law Enforcement Action - October 2010', 
                         'description' => 'Operation Trident Breach results in the arrest of over 100 individuals connected to Zeus botnets. The FBI, in cooperation with international law enforcement, dismantles significant parts of the Zeus operation.'],
                        ['year' => '2011', 'title' => 'Source Code Leak - May 2011', 
                         'description' => 'The Zeus source code is leaked online, leading to numerous variants and derivative malware families including Citadel, GameOver Zeus, and others. This proliferation makes Zeus one of the most influential pieces of malware in cyber crime history.']
                    ];
                    foreach ($hardcodedEventDetails as $index => $event):
                ?>
                <div class="timeline-event-card" data-index="<?php echo $index; ?>">
                    <h2><?php echo htmlspecialchars($event['year']); ?></h2>
                    <h3><?php echo htmlspecialchars($event['title']); ?></h3>
                    <p><?php echo htmlspecialchars($event['description']); ?></p>
                </div>
                <?php 
                    endforeach;
                } else {
                    foreach ($events as $index => $event): 
                ?>
                <div class="timeline-event-card" data-index="<?php echo $index; ?>">
                    <h2><?php echo htmlspecialchars($event['year']); ?></h2>
                    <h3><?php echo htmlspecialchars($event['title']); ?></h3>
                    <p><?php echo htmlspecialchars($event['description']); ?></p>
                </div>
                <?php
                    endforeach;
                }
                ?>            </div>
        </div>

    </section>

    <script src="script.js"></script>
    <script src="timeline_debug.js"></script>

    <?php include 'footer.php'; ?>